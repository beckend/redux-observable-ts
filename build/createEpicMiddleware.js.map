{"version":3,"sources":["../src/createEpicMiddleware.ts"],"names":[],"mappings":";AAMA,kCAAkC,qBAAqB,CAAC,CAAA;AACxD,yBAAyB,YAAY,CAAC,CAAA;AAMtC,wBAAwB,cAAc,CAAC,CAAA;AACvC,QAAO,uBAAuB,CAAC,CAAA;AAC/B,QAAO,6BAA6B,CAAC,CAAA;AACrC,2CAA2C;AAC3C,uDAAuD;AAEvD,IAAM,cAAc,GAAiB;IACnC,KAAK,EAAE,UAAC,OAAY,IAAK,OAAA,OAAO,EAAP,CAAO;IAChC,MAAM,EAAE,UAAC,OAAY,IAAK,OAAA,OAAO,EAAP,CAAO;CAClC,CAAC;AAKF,IAAM,cAAc,GAAG;IACrB,OAAO,EAAE,cAAc;CACxB,CAAC;AAEF,8BACE,IAAiC,EAAE,EAA8D;QAA5D,kDAAwB,EAAxB,6CAAwB;IAE7D,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC;QAC/B,MAAM,IAAI,SAAS,CAAC,sDAAsD,CAAC,CAAC;IAC9E,CAAC;IAED,IAAM,MAAM,GAAG,IAAI,iBAAO,EAAE,CAAC;IAC7B,IAAM,OAAO,GAA+B,OAAO,CAAC,KAAK,CACvD,IAAI,qCAAiB,CAAC,MAAM,CAAC,CAC9B,CAAC;IACF,IAAM,KAAK,GAAG,IAAI,iBAAO,EAAE,CAAC;IAC5B,gCAAgC;IAChC,4CAA4C;IAE5C,IAAI,KAAiB,CAAC;IACtB,IAAM,cAAc,GAAG,UAAC,MAAkB;QACxC,KAAK,GAAG,MAAM,CAAC;QAEf,MAAM,CAAC,UAAC,IAAuB;YAC7B,KAAK;iBACF,GAAG,CAAC,UAAC,OAAwB,IAAK,OAAA,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,EAAvB,CAAuB,CAAC;iBAC1D,SAAS,CAAC,UAAC,UAAsC,IAAK,OAAA,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,EAA1B,CAA0B,CAAC;iBACjF,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAE7B,0BAA0B;YAC1B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEjB,MAAM,CAAC,UAAC,MAAe;gBACrB,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC5B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACpB,MAAM,CAAC,MAAM,CAAC;YAChB,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC,CAAC;IAED,cAAsB,CAAC,WAAW,GAAG,UAAC,QAAqC;QAC1E,6CAA6C;QAC7C,sBAAsB;QACtB,KAAK,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,mBAAQ,EAAE,CAAC,CAAC;QACnC,2DAA2D;QAC3D,mBAAmB;QACnB,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACvB,CAAC,CAAC;IAEF,MAAM,CAAC,cAAuD,CAAC;AACjE,CAAC;AA9Ce,4BAAoB,uBA8CnC,CAAA","file":"createEpicMiddleware.js","sourcesContent":["/* tslint:disable: variable-name */\nimport { Action } from 'redux-actions';\nimport {\n  Store,\n  Dispatch,\n} from 'redux';\nimport { ActionsObservable } from './ActionsObservable';\nimport { EPIC_END } from './EPIC_END';\nimport {\n  IEpicAdapter,\n  IEpic,\n  IEpicMiddleware,\n} from './model';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/switchMap';\n// import { map } from 'rxjs/operator/map';\n// import { switchMap } from 'rxjs/operator/switchMap';\n\nconst defaultAdapter: IEpicAdapter = {\n  input: (action$: any) => action$,\n  output: (action$: any) => action$,\n};\n\nexport interface IDefaultOptions {\n  adapter: IEpicAdapter;\n}\nconst defaultOptions = {\n  adapter: defaultAdapter,\n};\n\nexport function createEpicMiddleware<TAction extends Action<any>, TStoreState>(\n  epic: IEpic<TAction, TStoreState>, { adapter = defaultAdapter }: IDefaultOptions = defaultOptions\n) {\n  if (typeof epic !== 'function') {\n    throw new TypeError('You must provide a root Epic to createEpicMiddleware');\n  }\n\n  const input$ = new Subject();\n  const action$: ActionsObservable<TAction> = adapter.input(\n    new ActionsObservable(input$)\n  );\n  const epic$ = new Subject();\n  // const eMap = map.bind(epic$);\n  // const eSwitchMap = switchMap.bind(epic$);\n\n  let store: Store<any>;\n  const epicMiddleware = (_store: Store<any>) => {\n    store = _store;\n\n    return (next: Dispatch<TAction>) => {\n      epic$\n        .map((epicArg: IEpic<any, any>) => epicArg(action$, store))\n        .switchMap((actionArg$: ActionsObservable<TAction>) => adapter.output(actionArg$))\n        .subscribe(store.dispatch);\n\n      // Setup initial root epic\n      epic$.next(epic);\n\n      return (action: TAction) => {\n        const result = next(action);\n        input$.next(action);\n        return result;\n      };\n    };\n  };\n\n  (epicMiddleware as any).replaceEpic = (nextEpic: IEpic<TAction, TStoreState>) => {\n    // gives the previous root Epic a last chance\n    // to do some clean up\n    store.dispatch({ type: EPIC_END });\n    // switches to the new root Epic, synchronously terminating\n    // the previous one\n    epic$.next(nextEpic);\n  };\n\n  return epicMiddleware as IEpicMiddleware<TAction, TStoreState>;\n}\n"],"sourceRoot":"/source/"}