{"version":3,"sources":["../src/ActionsObservable.ts"],"names":[],"mappings":";;;;;;AAAA,4CAA4C;AAC5C,0CAA0C;AAC1C,mCAAmC;AACnC,0CAA0C;AAC1C,2BAA2B,iBAAiB,CAAC,CAAA;AAE7C,mBAAmB,oBAAoB,CAAC,CAAA;AAExC,uBAAuB,sBAAsB,CAAC,CAAA;AAK9C;IAA0D,qCAAa;IAUrE,2BAAY,cAA6B;QACvC,iBAAO,CAAC;QATH,cAAS,GAAyB,EAAE,CAAC;QAU1C,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC;IAC/B,CAAC;IAPa,oBAAE,GAAhB;QAAiB,iBAAgC;aAAhC,WAAgC,CAAhC,sBAAgC,CAAhC,IAAgC;YAAhC,gCAAgC;;QAC/C,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,OAAE,eAAI,OAAO,CAAQ,CAAC,CAAC,CAAC;IAC3C,CAAC;IAOM,gCAAI,GAAX,UAAY,QAA0B;QACpC,IAAM,UAAU,GAAG,IAAI,iBAAiB,CAAE,IAAY,CAAC,CAAC;QACxD,UAAU,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC/B,MAAM,CAAC,UAAU,CAAC;IACpB,CAAC;IAEM,kCAAM,GAAb;QAAc,cAAiB;aAAjB,WAAiB,CAAjB,sBAAiB,CAAjB,IAAiB;YAAjB,6BAAiB;;QAC7B,MAAM,CAAC,eAAM,CAAC,IAAI,CAAC,IAAI,EAAE,UAAC,EAAW;gBAAT,cAAI;YAC9B,IAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;YACxB,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;YAC1B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC7B,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;wBACrB,MAAM,CAAC,IAAI,CAAC;oBACd,CAAC;gBACH,CAAC;YACH,CAAC;YACD,MAAM,CAAC,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;IACL,CAAC;IACH,wBAAC;AAAD,CApCA,AAoCC,CApCyD,uBAAU,GAoCnE;AApCY,yBAAiB,oBAoC7B,CAAA","file":"ActionsObservable.js","sourcesContent":["/* tslint:disable: no-increment-decrement */\n/* tslint:disable: no-reserved-keywords */\n/* tslint:disable: function-name */\n/* tslint:disable: prefer-array-literal */\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { of } from 'rxjs/observable/of';\nimport { Operator } from 'rxjs/Operator';\nimport { filter } from 'rxjs/operator/filter';\nimport { Action } from 'redux-actions';\n\nexport type TAction = Action<any>;\n\nexport class ActionsObservable<T extends TAction> extends Observable<T> {\n\n  public observers: Observer<T>[] | null = [];\n\n  public source: Observable<T>;\n\n  public static of(...actions: Array<TAction | any>) {\n    return new this((of(...actions) as any));\n  }\n\n  constructor(actionsSubject: Observable<T>) {\n    super();\n    this.source = actionsSubject;\n  }\n\n  public lift(operator: Operator<any, T>) {\n    const observable = new ActionsObservable((this as any));\n    observable.operator = operator;\n    return observable;\n  }\n\n  public ofType(...keys: string[]): Observable<T> {\n    return filter.call(this, ({ type }: T) => {\n      const len = keys.length;\n      if (len === 1) {\n        return type === keys[0];\n      } else {\n        for (let i = 0; i < len; i++) {\n          if (keys[i] === type) {\n            return true;\n          }\n        }\n      }\n      return false;\n    });\n  }\n}\n"],"sourceRoot":"/source/"}